version: '3.8'

services:
  base_image:
    build:
      context: .
      dockerfile: backend/Dockerfile.base
    image: smarkets-base-image

  test_db:
    image: postgres:15
    container_name: test_db
    restart: always
    environment:
      POSTGRES_DB: test_odds_db
      POSTGRES_USER: test_admin
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"  # Use a different port than production
    networks:
      - test_network

  test_redis:
    image: redis:latest
    container_name: test_redis
    restart: always
    ports:
      - "6380:6379"  # Use a different port than production
    networks:
      - test_network

  test_scraper:
    build:
      context: .
      dockerfile: backend/scraper/Dockerfile
    container_name: test_scraper
    restart: always
    depends_on:
      - base_image
      - test_db
      - test_redis
    environment:
      POSTGRES_DB: test_odds_db
      POSTGRES_USER: test_admin
      POSTGRES_PASSWORD: test_password
      POSTGRES_HOST: test_db
      POSTGRES_PORT: 5432
      REDIS_HOST: test_redis
      REDIS_PORT: 6379
      ODDS_PUBLISH_INTERVAL: 1
    ports:
      - "8002:8001"
    volumes:
      - ./backend:/app/backend
    networks:
      - test_network

  test_runner:
    build:
      context: .
      dockerfile: backend/scraper/Dockerfile.test
    container_name: test_runner
    depends_on:
      - base_image
      - test_scraper
      - test_db
      - test_redis
    environment:
      POSTGRES_DB: test_odds_db
      POSTGRES_USER: test_admin
      POSTGRES_PASSWORD: test_password
      POSTGRES_HOST: test_db
      POSTGRES_PORT: 5432
      REDIS_HOST: test_redis
      REDIS_PORT: 6379
      ODDS_PUBLISH_INTERVAL: 1
    networks:
      - test_network

networks:
  test_network:
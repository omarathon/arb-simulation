version: '3.8'

services:
  base_image:
    build:
      context: .
      dockerfile: backend/Dockerfile.base
    image: smarkets-base-image

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend_network

  scraper:
    build:
      context: .
      dockerfile: backend/scraper/Dockerfile
    container_name: scraper
    restart: always
    depends_on:
      - redis
      - base_image
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      ODDS_PUBLISH_INTERVAL: 0.1

      ODDS_UPDATE_PROBABILITY: 0.3
      ODDS_CLOSE_PROBABILITY: 0.1

      # # CONFIGURATION FOR LOTS OF ARBITRAGE
      # VIG_PERCENTAGE: 0.04          # Lower vig (Easier arbitrage)
      # HOME_WIN_ODDS_MIN: 1.5        # Wider range of odds (higher variance)
      # HOME_WIN_ODDS_MAX: 2.5        # Wider range of odds (higher variance)

      # CONFIGURATION FOR RARE ARBITRAGE
      VIG_PERCENTAGE: 0.10          # High vig (harder for arbitrage)
      HOME_WIN_ODDS_MIN: 1.8        # Narrower range of odds (lower variance)
      HOME_WIN_ODDS_MAX: 2.3        # Narrower range of odds (lower variance)
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app/backend
    networks:
      - backend_network

  gateway:
    build:
      context: .
      dockerfile: backend/gateway/Dockerfile
    container_name: gateway
    restart: always
    depends_on:
      - redis
      - scraper
      - base_image
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_ODDS_UPDATE_CHANNEL: odds_update
    ports:
      - "8002:8001"
    volumes:
      - ./backend:/app/backend
    networks:
      - backend_network

  arb_engine:
    build:
      context: .
      dockerfile: backend/arb_engine/Dockerfile
    container_name: arb_engine
    restart: always
    depends_on:
      - redis
      - base_image
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8003:8001"
    volumes:
      - ./backend:/app/backend
    networks:
      - backend_network

  arb_executor:
    build:
      context: .
      dockerfile: backend/arb_executor/Dockerfile
    container_name: arb_executor
    restart: always
    depends_on:
      - redis
      - base_image
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DELAY_SECONDS_TO_EXECUTE_ARB: 0.5
    ports:
      - "8004:8001"
    volumes:
      - ./backend:/app/backend
    networks:
      - backend_network

networks:
  backend_network:
